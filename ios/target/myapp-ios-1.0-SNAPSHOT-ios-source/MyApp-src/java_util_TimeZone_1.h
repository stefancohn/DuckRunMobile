#ifndef __JAVA_UTIL_TIMEZONE_1__
#define __JAVA_UTIL_TIMEZONE_1__

#include "cn1_globals.h"
#include "java_util_TimeZone.h"
extern struct clazz class__java_util_TimeZone_1;
extern void __INIT_VTABLE_java_util_TimeZone_1(CODENAME_ONE_THREAD_STATE, void** vtable);
extern void __STATIC_INITIALIZER_java_util_TimeZone_1(CODENAME_ONE_THREAD_STATE);
extern void __FINALIZER_java_util_TimeZone_1(CODENAME_ONE_THREAD_STATE, JAVA_OBJECT objToDelete);
extern void __GC_MARK_java_util_TimeZone_1(CODENAME_ONE_THREAD_STATE, JAVA_OBJECT objToMark, JAVA_BOOLEAN force);
extern JAVA_OBJECT __NEW_java_util_TimeZone_1(CODENAME_ONE_THREAD_STATE);

JAVA_VOID java_util_TimeZone_1___INIT_____java_lang_String(CODENAME_ONE_THREAD_STATE, JAVA_OBJECT  __cn1ThisObject, JAVA_OBJECT __cn1Arg1);

JAVA_INT java_util_TimeZone_1_getOffset___int_int_int_int_int_int_R_int(CODENAME_ONE_THREAD_STATE, JAVA_OBJECT  __cn1ThisObject, JAVA_INT __cn1Arg1, JAVA_INT __cn1Arg2, JAVA_INT __cn1Arg3, JAVA_INT __cn1Arg4, JAVA_INT __cn1Arg5, JAVA_INT __cn1Arg6);

JAVA_INT java_util_TimeZone_1_getRawOffset___R_int(CODENAME_ONE_THREAD_STATE, JAVA_OBJECT  __cn1ThisObject);

JAVA_BOOLEAN java_util_TimeZone_1_inDaylightTime___java_util_Date_R_boolean(CODENAME_ONE_THREAD_STATE, JAVA_OBJECT  __cn1ThisObject, JAVA_OBJECT __cn1Arg1);

JAVA_BOOLEAN java_util_TimeZone_1_useDaylightTime___R_boolean(CODENAME_ONE_THREAD_STATE, JAVA_OBJECT  __cn1ThisObject);

JAVA_VOID java_util_TimeZone_1___INIT____(CODENAME_ONE_THREAD_STATE, JAVA_OBJECT  __cn1ThisObject);

JAVA_VOID java_util_TimeZone_1_setID___java_lang_String(CODENAME_ONE_THREAD_STATE, JAVA_OBJECT  __cn1ThisObject, JAVA_OBJECT __cn1Arg1);

JAVA_OBJECT java_util_TimeZone_1_getAvailableIDs___R_java_lang_String_1ARRAY(CODENAME_ONE_THREAD_STATE);

JAVA_OBJECT java_util_TimeZone_1_getDefault___R_java_util_TimeZone(CODENAME_ONE_THREAD_STATE);

JAVA_INT java_util_TimeZone_1_getDSTSavings___R_int(CODENAME_ONE_THREAD_STATE, JAVA_OBJECT  __cn1ThisObject);

JAVA_OBJECT java_util_TimeZone_1_getID___R_java_lang_String(CODENAME_ONE_THREAD_STATE, JAVA_OBJECT  __cn1ThisObject);

JAVA_OBJECT java_util_TimeZone_1_getTimeZone___java_lang_String_R_java_util_TimeZone(CODENAME_ONE_THREAD_STATE, JAVA_OBJECT __cn1Arg1);

JAVA_INT java_util_TimeZone_1_access$000___java_lang_String_int_int_int_int_R_int(CODENAME_ONE_THREAD_STATE, JAVA_OBJECT __cn1Arg1, JAVA_INT __cn1Arg2, JAVA_INT __cn1Arg3, JAVA_INT __cn1Arg4, JAVA_INT __cn1Arg5);

JAVA_INT java_util_TimeZone_1_access$100___java_lang_String_R_int(CODENAME_ONE_THREAD_STATE, JAVA_OBJECT __cn1Arg1);

JAVA_BOOLEAN java_util_TimeZone_1_access$200___java_lang_String_long_R_boolean(CODENAME_ONE_THREAD_STATE, JAVA_OBJECT __cn1Arg1, JAVA_LONG __cn1Arg2);

JAVA_LONG java_util_TimeZone_1_access$300___R_long(CODENAME_ONE_THREAD_STATE);

JAVA_LONG java_util_TimeZone_1_access$400___R_long(CODENAME_ONE_THREAD_STATE);

JAVA_OBJECT java_util_TimeZone_1_access$500___java_util_TimeZone_R_java_lang_String(CODENAME_ONE_THREAD_STATE, JAVA_OBJECT __cn1Arg1);

JAVA_VOID java_util_TimeZone_1___CLINIT____(CODENAME_ONE_THREAD_STATE);

JAVA_BOOLEAN java_util_TimeZone_1_equals___java_lang_Object_R_boolean(CODENAME_ONE_THREAD_STATE, JAVA_OBJECT  __cn1ThisObject, JAVA_OBJECT __cn1Arg1);

JAVA_OBJECT java_util_TimeZone_1_getClass___R_java_lang_Class(CODENAME_ONE_THREAD_STATE, JAVA_OBJECT  __cn1ThisObject);

JAVA_INT java_util_TimeZone_1_hashCode___R_int(CODENAME_ONE_THREAD_STATE, JAVA_OBJECT  __cn1ThisObject);

JAVA_VOID java_util_TimeZone_1_notify__(CODENAME_ONE_THREAD_STATE, JAVA_OBJECT  __cn1ThisObject);

JAVA_VOID java_util_TimeZone_1_notifyAll__(CODENAME_ONE_THREAD_STATE, JAVA_OBJECT  __cn1ThisObject);

JAVA_OBJECT java_util_TimeZone_1_toString___R_java_lang_String(CODENAME_ONE_THREAD_STATE, JAVA_OBJECT  __cn1ThisObject);

JAVA_VOID java_util_TimeZone_1_wait__(CODENAME_ONE_THREAD_STATE, JAVA_OBJECT  __cn1ThisObject);

JAVA_VOID java_util_TimeZone_1_wait___long(CODENAME_ONE_THREAD_STATE, JAVA_OBJECT  __cn1ThisObject, JAVA_LONG __cn1Arg1);

JAVA_VOID java_util_TimeZone_1_wait___long_int(CODENAME_ONE_THREAD_STATE, JAVA_OBJECT  __cn1ThisObject, JAVA_LONG __cn1Arg1, JAVA_INT __cn1Arg2);

JAVA_OBJECT java_util_TimeZone_1_clone___R_java_lang_Object(CODENAME_ONE_THREAD_STATE, JAVA_OBJECT  __cn1ThisObject);
#define get_static_java_util_TimeZone_1_SHORT(threadStateArgument) get_static_java_util_TimeZone_SHORT(threadStateArgument)
#define set_static_java_util_TimeZone_1_SHORT(threadStateArgument, valueArgument) set_static_java_util_TimeZone_SHORT(threadStateArgument, valueArgument)
#define get_static_java_util_TimeZone_1_LONG(threadStateArgument) get_static_java_util_TimeZone_LONG(threadStateArgument)
#define set_static_java_util_TimeZone_1_LONG(threadStateArgument, valueArgument) set_static_java_util_TimeZone_LONG(threadStateArgument, valueArgument)
#define get_static_java_util_TimeZone_1_GMT(threadStateArgument) get_static_java_util_TimeZone_GMT(threadStateArgument)
#define set_static_java_util_TimeZone_1_GMT(threadStateArgument, valueArgument) set_static_java_util_TimeZone_GMT(threadStateArgument, valueArgument)
JAVA_OBJECT get_field_java_util_TimeZone_1_val_tzone(JAVA_OBJECT t);
void set_field_java_util_TimeZone_1_val_tzone(CODENAME_ONE_THREAD_STATE, JAVA_OBJECT __cn1Val, JAVA_OBJECT __cn1T);


struct obj__java_util_TimeZone_1 {
    DEBUG_GC_VARIABLES
    struct clazz *__codenameOneParentClsReference;
    int __codenameOneReferenceCount;
    void* __codenameOneThreadData;
    int __codenameOneGcMark;
    void* __ownerThread;
    int __heapPosition;
    JAVA_OBJECT java_util_TimeZone_ID;
    JAVA_OBJECT java_util_TimeZone_1_val_tzone;
};



#endif //__JAVA_UTIL_TIMEZONE_1__
