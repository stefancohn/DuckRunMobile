#ifndef __COM_CODENAME1_LOCATION_GEOFENCE__
#define __COM_CODENAME1_LOCATION_GEOFENCE__

#include "cn1_globals.h"
#include "java_lang_Object.h"
extern struct clazz class__com_codename1_location_Geofence;
extern struct clazz class_array1__com_codename1_location_Geofence;
extern void __INIT_VTABLE_com_codename1_location_Geofence(CODENAME_ONE_THREAD_STATE, void** vtable);
extern void __STATIC_INITIALIZER_com_codename1_location_Geofence(CODENAME_ONE_THREAD_STATE);
extern void __FINALIZER_com_codename1_location_Geofence(CODENAME_ONE_THREAD_STATE, JAVA_OBJECT objToDelete);
extern void __GC_MARK_com_codename1_location_Geofence(CODENAME_ONE_THREAD_STATE, JAVA_OBJECT objToMark, JAVA_BOOLEAN force);
extern JAVA_OBJECT __NEW_com_codename1_location_Geofence(CODENAME_ONE_THREAD_STATE);
extern JAVA_OBJECT __NEW_ARRAY_com_codename1_location_Geofence(CODENAME_ONE_THREAD_STATE, JAVA_INT size);

JAVA_VOID com_codename1_location_Geofence___INIT_____java_lang_String_com_codename1_location_Location_int_long(CODENAME_ONE_THREAD_STATE, JAVA_OBJECT  __cn1ThisObject, JAVA_OBJECT __cn1Arg1, JAVA_OBJECT __cn1Arg2, JAVA_INT __cn1Arg3, JAVA_LONG __cn1Arg4);

JAVA_OBJECT com_codename1_location_Geofence_getId___R_java_lang_String(CODENAME_ONE_THREAD_STATE, JAVA_OBJECT  __cn1ThisObject);

JAVA_OBJECT com_codename1_location_Geofence_getLoc___R_com_codename1_location_Location(CODENAME_ONE_THREAD_STATE, JAVA_OBJECT  __cn1ThisObject);

JAVA_LONG com_codename1_location_Geofence_getExpiration___R_long(CODENAME_ONE_THREAD_STATE, JAVA_OBJECT  __cn1ThisObject);

JAVA_INT com_codename1_location_Geofence_getRadius___R_int(CODENAME_ONE_THREAD_STATE, JAVA_OBJECT  __cn1ThisObject);

JAVA_DOUBLE com_codename1_location_Geofence_getDistanceTo___com_codename1_location_Geofence_R_double(CODENAME_ONE_THREAD_STATE, JAVA_OBJECT  __cn1ThisObject, JAVA_OBJECT __cn1Arg1);

JAVA_OBJECT com_codename1_location_Geofence_createDistanceComparator___com_codename1_location_Geofence_R_java_util_Comparator(CODENAME_ONE_THREAD_STATE, JAVA_OBJECT __cn1Arg1);

JAVA_OBJECT com_codename1_location_Geofence_createDistanceComparator___com_codename1_location_Location_R_java_util_Comparator(CODENAME_ONE_THREAD_STATE, JAVA_OBJECT __cn1Arg1);

JAVA_BOOLEAN com_codename1_location_Geofence_equals___java_lang_Object_R_boolean(CODENAME_ONE_THREAD_STATE, JAVA_OBJECT  __cn1ThisObject, JAVA_OBJECT __cn1Arg1);

JAVA_BOOLEAN com_codename1_location_Geofence_eq___java_lang_Object_java_lang_Object_R_boolean(CODENAME_ONE_THREAD_STATE, JAVA_OBJECT  __cn1ThisObject, JAVA_OBJECT __cn1Arg1, JAVA_OBJECT __cn1Arg2);

JAVA_BOOLEAN com_codename1_location_Geofence_eq___com_codename1_location_Location_com_codename1_location_Location_R_boolean(CODENAME_ONE_THREAD_STATE, JAVA_OBJECT  __cn1ThisObject, JAVA_OBJECT __cn1Arg1, JAVA_OBJECT __cn1Arg2);

JAVA_VOID com_codename1_location_Geofence___INIT____(CODENAME_ONE_THREAD_STATE, JAVA_OBJECT  __cn1ThisObject);

JAVA_OBJECT com_codename1_location_Geofence_getClass___R_java_lang_Class(CODENAME_ONE_THREAD_STATE, JAVA_OBJECT  __cn1ThisObject);

JAVA_INT com_codename1_location_Geofence_hashCode___R_int(CODENAME_ONE_THREAD_STATE, JAVA_OBJECT  __cn1ThisObject);

JAVA_VOID com_codename1_location_Geofence_notify__(CODENAME_ONE_THREAD_STATE, JAVA_OBJECT  __cn1ThisObject);

JAVA_VOID com_codename1_location_Geofence_notifyAll__(CODENAME_ONE_THREAD_STATE, JAVA_OBJECT  __cn1ThisObject);

JAVA_OBJECT com_codename1_location_Geofence_toString___R_java_lang_String(CODENAME_ONE_THREAD_STATE, JAVA_OBJECT  __cn1ThisObject);

JAVA_VOID com_codename1_location_Geofence_wait__(CODENAME_ONE_THREAD_STATE, JAVA_OBJECT  __cn1ThisObject);

JAVA_VOID com_codename1_location_Geofence_wait___long(CODENAME_ONE_THREAD_STATE, JAVA_OBJECT  __cn1ThisObject, JAVA_LONG __cn1Arg1);

JAVA_VOID com_codename1_location_Geofence_wait___long_int(CODENAME_ONE_THREAD_STATE, JAVA_OBJECT  __cn1ThisObject, JAVA_LONG __cn1Arg1, JAVA_INT __cn1Arg2);

JAVA_OBJECT com_codename1_location_Geofence_clone___R_java_lang_Object(CODENAME_ONE_THREAD_STATE, JAVA_OBJECT  __cn1ThisObject);

JAVA_BOOLEAN virtual_com_codename1_location_Geofence_equals___java_lang_Object_R_boolean(CODENAME_ONE_THREAD_STATE, JAVA_OBJECT  __cn1ThisObject, JAVA_OBJECT __cn1Arg1);
#define virtual_com_codename1_location_Geofence_getId___R_java_lang_String com_codename1_location_Geofence_getId___R_java_lang_String
#define virtual_com_codename1_location_Geofence_getLoc___R_com_codename1_location_Location com_codename1_location_Geofence_getLoc___R_com_codename1_location_Location
#define virtual_com_codename1_location_Geofence_getExpiration___R_long com_codename1_location_Geofence_getExpiration___R_long
#define virtual_com_codename1_location_Geofence_getRadius___R_int com_codename1_location_Geofence_getRadius___R_int
JAVA_OBJECT get_field_com_codename1_location_Geofence_id(JAVA_OBJECT t);
void set_field_com_codename1_location_Geofence_id(CODENAME_ONE_THREAD_STATE, JAVA_OBJECT __cn1Val, JAVA_OBJECT __cn1T);
JAVA_OBJECT get_field_com_codename1_location_Geofence_loc(JAVA_OBJECT t);
void set_field_com_codename1_location_Geofence_loc(CODENAME_ONE_THREAD_STATE, JAVA_OBJECT __cn1Val, JAVA_OBJECT __cn1T);
JAVA_INT get_field_com_codename1_location_Geofence_radius(JAVA_OBJECT t);
void set_field_com_codename1_location_Geofence_radius(CODENAME_ONE_THREAD_STATE, JAVA_INT __cn1Val, JAVA_OBJECT __cn1T);
JAVA_LONG get_field_com_codename1_location_Geofence_expiration(JAVA_OBJECT t);
void set_field_com_codename1_location_Geofence_expiration(CODENAME_ONE_THREAD_STATE, JAVA_LONG __cn1Val, JAVA_OBJECT __cn1T);


struct obj__com_codename1_location_Geofence {
    DEBUG_GC_VARIABLES
    struct clazz *__codenameOneParentClsReference;
    int __codenameOneReferenceCount;
    void* __codenameOneThreadData;
    int __codenameOneGcMark;
    void* __ownerThread;
    int __heapPosition;
    JAVA_OBJECT com_codename1_location_Geofence_id;
    JAVA_OBJECT com_codename1_location_Geofence_loc;
    JAVA_INT com_codename1_location_Geofence_radius;
    JAVA_LONG com_codename1_location_Geofence_expiration;
};



#endif //__COM_CODENAME1_LOCATION_GEOFENCE__
