#ifndef __COM_CODENAME1_UTIL_DATEUTIL__
#define __COM_CODENAME1_UTIL_DATEUTIL__

#include "cn1_globals.h"
#include "java_lang_Object.h"
extern struct clazz class__com_codename1_util_DateUtil;
extern void __INIT_VTABLE_com_codename1_util_DateUtil(CODENAME_ONE_THREAD_STATE, void** vtable);
extern void __STATIC_INITIALIZER_com_codename1_util_DateUtil(CODENAME_ONE_THREAD_STATE);
extern void __FINALIZER_com_codename1_util_DateUtil(CODENAME_ONE_THREAD_STATE, JAVA_OBJECT objToDelete);
extern void __GC_MARK_com_codename1_util_DateUtil(CODENAME_ONE_THREAD_STATE, JAVA_OBJECT objToMark, JAVA_BOOLEAN force);
extern JAVA_OBJECT __NEW_com_codename1_util_DateUtil(CODENAME_ONE_THREAD_STATE);
extern JAVA_OBJECT __NEW_INSTANCE_com_codename1_util_DateUtil(CODENAME_ONE_THREAD_STATE);

JAVA_VOID com_codename1_util_DateUtil___INIT_____java_util_TimeZone(CODENAME_ONE_THREAD_STATE, JAVA_OBJECT  __cn1ThisObject, JAVA_OBJECT __cn1Arg1);

JAVA_OBJECT com_codename1_util_DateUtil_min___java_util_Date_1ARRAY_R_java_util_Date(CODENAME_ONE_THREAD_STATE, JAVA_OBJECT __cn1Arg1);

JAVA_INT com_codename1_util_DateUtil_compare___java_util_Date_java_util_Date_R_int(CODENAME_ONE_THREAD_STATE, JAVA_OBJECT __cn1Arg1, JAVA_OBJECT __cn1Arg2);

JAVA_OBJECT com_codename1_util_DateUtil_compareByDateField___long_R_java_util_Comparator(CODENAME_ONE_THREAD_STATE, JAVA_LONG __cn1Arg1);

JAVA_OBJECT com_codename1_util_DateUtil_max___java_util_Date_1ARRAY_R_java_util_Date(CODENAME_ONE_THREAD_STATE, JAVA_OBJECT __cn1Arg1);

JAVA_VOID com_codename1_util_DateUtil___INIT____(CODENAME_ONE_THREAD_STATE, JAVA_OBJECT  __cn1ThisObject);

JAVA_INT com_codename1_util_DateUtil_getOffset___long_R_int(CODENAME_ONE_THREAD_STATE, JAVA_OBJECT  __cn1ThisObject, JAVA_LONG __cn1Arg1);

JAVA_BOOLEAN com_codename1_util_DateUtil_inDaylightTime___java_util_Date_R_boolean(CODENAME_ONE_THREAD_STATE, JAVA_OBJECT  __cn1ThisObject, JAVA_OBJECT __cn1Arg1);

JAVA_BOOLEAN com_codename1_util_DateUtil_isSameYear___java_util_Calendar_java_util_Calendar_R_boolean(CODENAME_ONE_THREAD_STATE, JAVA_OBJECT  __cn1ThisObject, JAVA_OBJECT __cn1Arg1, JAVA_OBJECT __cn1Arg2);

JAVA_BOOLEAN com_codename1_util_DateUtil_isSameYear___java_util_Date_java_util_Date_R_boolean(CODENAME_ONE_THREAD_STATE, JAVA_OBJECT  __cn1ThisObject, JAVA_OBJECT __cn1Arg1, JAVA_OBJECT __cn1Arg2);

JAVA_BOOLEAN com_codename1_util_DateUtil_isSameMonth___java_util_Calendar_java_util_Calendar_R_boolean(CODENAME_ONE_THREAD_STATE, JAVA_OBJECT  __cn1ThisObject, JAVA_OBJECT __cn1Arg1, JAVA_OBJECT __cn1Arg2);

JAVA_BOOLEAN com_codename1_util_DateUtil_isSameMonth___java_util_Date_java_util_Date_R_boolean(CODENAME_ONE_THREAD_STATE, JAVA_OBJECT  __cn1ThisObject, JAVA_OBJECT __cn1Arg1, JAVA_OBJECT __cn1Arg2);

JAVA_BOOLEAN com_codename1_util_DateUtil_isSameDay___java_util_Calendar_java_util_Calendar_R_boolean(CODENAME_ONE_THREAD_STATE, JAVA_OBJECT  __cn1ThisObject, JAVA_OBJECT __cn1Arg1, JAVA_OBJECT __cn1Arg2);

JAVA_BOOLEAN com_codename1_util_DateUtil_isSameDay___java_util_Date_java_util_Date_R_boolean(CODENAME_ONE_THREAD_STATE, JAVA_OBJECT  __cn1ThisObject, JAVA_OBJECT __cn1Arg1, JAVA_OBJECT __cn1Arg2);

JAVA_BOOLEAN com_codename1_util_DateUtil_isSameHour___java_util_Calendar_java_util_Calendar_R_boolean(CODENAME_ONE_THREAD_STATE, JAVA_OBJECT  __cn1ThisObject, JAVA_OBJECT __cn1Arg1, JAVA_OBJECT __cn1Arg2);

JAVA_BOOLEAN com_codename1_util_DateUtil_isSameHour___java_util_Date_java_util_Date_R_boolean(CODENAME_ONE_THREAD_STATE, JAVA_OBJECT  __cn1ThisObject, JAVA_OBJECT __cn1Arg1, JAVA_OBJECT __cn1Arg2);

JAVA_BOOLEAN com_codename1_util_DateUtil_isSameMinute___java_util_Calendar_java_util_Calendar_R_boolean(CODENAME_ONE_THREAD_STATE, JAVA_OBJECT  __cn1ThisObject, JAVA_OBJECT __cn1Arg1, JAVA_OBJECT __cn1Arg2);

JAVA_BOOLEAN com_codename1_util_DateUtil_isSameMinute___java_util_Date_java_util_Date_R_boolean(CODENAME_ONE_THREAD_STATE, JAVA_OBJECT  __cn1ThisObject, JAVA_OBJECT __cn1Arg1, JAVA_OBJECT __cn1Arg2);

JAVA_BOOLEAN com_codename1_util_DateUtil_isSameSecond___java_util_Calendar_java_util_Calendar_R_boolean(CODENAME_ONE_THREAD_STATE, JAVA_OBJECT  __cn1ThisObject, JAVA_OBJECT __cn1Arg1, JAVA_OBJECT __cn1Arg2);

JAVA_BOOLEAN com_codename1_util_DateUtil_isSameSecond___java_util_Date_java_util_Date_R_boolean(CODENAME_ONE_THREAD_STATE, JAVA_OBJECT  __cn1ThisObject, JAVA_OBJECT __cn1Arg1, JAVA_OBJECT __cn1Arg2);

JAVA_BOOLEAN com_codename1_util_DateUtil_isSameTime___java_util_Calendar_java_util_Calendar_R_boolean(CODENAME_ONE_THREAD_STATE, JAVA_OBJECT  __cn1ThisObject, JAVA_OBJECT __cn1Arg1, JAVA_OBJECT __cn1Arg2);

JAVA_BOOLEAN com_codename1_util_DateUtil_isSameTime___java_util_Date_java_util_Date_R_boolean(CODENAME_ONE_THREAD_STATE, JAVA_OBJECT  __cn1ThisObject, JAVA_OBJECT __cn1Arg1, JAVA_OBJECT __cn1Arg2);

JAVA_OBJECT com_codename1_util_DateUtil_getTimeAgo___java_util_Date_R_java_lang_String(CODENAME_ONE_THREAD_STATE, JAVA_OBJECT  __cn1ThisObject, JAVA_OBJECT __cn1Arg1);

JAVA_BOOLEAN com_codename1_util_DateUtil_equals___java_lang_Object_R_boolean(CODENAME_ONE_THREAD_STATE, JAVA_OBJECT  __cn1ThisObject, JAVA_OBJECT __cn1Arg1);

JAVA_OBJECT com_codename1_util_DateUtil_getClass___R_java_lang_Class(CODENAME_ONE_THREAD_STATE, JAVA_OBJECT  __cn1ThisObject);

JAVA_INT com_codename1_util_DateUtil_hashCode___R_int(CODENAME_ONE_THREAD_STATE, JAVA_OBJECT  __cn1ThisObject);

JAVA_VOID com_codename1_util_DateUtil_notify__(CODENAME_ONE_THREAD_STATE, JAVA_OBJECT  __cn1ThisObject);

JAVA_VOID com_codename1_util_DateUtil_notifyAll__(CODENAME_ONE_THREAD_STATE, JAVA_OBJECT  __cn1ThisObject);

JAVA_OBJECT com_codename1_util_DateUtil_toString___R_java_lang_String(CODENAME_ONE_THREAD_STATE, JAVA_OBJECT  __cn1ThisObject);

JAVA_VOID com_codename1_util_DateUtil_wait__(CODENAME_ONE_THREAD_STATE, JAVA_OBJECT  __cn1ThisObject);

JAVA_VOID com_codename1_util_DateUtil_wait___long(CODENAME_ONE_THREAD_STATE, JAVA_OBJECT  __cn1ThisObject, JAVA_LONG __cn1Arg1);

JAVA_VOID com_codename1_util_DateUtil_wait___long_int(CODENAME_ONE_THREAD_STATE, JAVA_OBJECT  __cn1ThisObject, JAVA_LONG __cn1Arg1, JAVA_INT __cn1Arg2);

JAVA_OBJECT com_codename1_util_DateUtil_clone___R_java_lang_Object(CODENAME_ONE_THREAD_STATE, JAVA_OBJECT  __cn1ThisObject);
#define virtual_com_codename1_util_DateUtil_getOffset___long_R_int com_codename1_util_DateUtil_getOffset___long_R_int
#define virtual_com_codename1_util_DateUtil_inDaylightTime___java_util_Date_R_boolean com_codename1_util_DateUtil_inDaylightTime___java_util_Date_R_boolean
#define virtual_com_codename1_util_DateUtil_isSameYear___java_util_Calendar_java_util_Calendar_R_boolean com_codename1_util_DateUtil_isSameYear___java_util_Calendar_java_util_Calendar_R_boolean
#define virtual_com_codename1_util_DateUtil_isSameMonth___java_util_Calendar_java_util_Calendar_R_boolean com_codename1_util_DateUtil_isSameMonth___java_util_Calendar_java_util_Calendar_R_boolean
#define virtual_com_codename1_util_DateUtil_isSameDay___java_util_Calendar_java_util_Calendar_R_boolean com_codename1_util_DateUtil_isSameDay___java_util_Calendar_java_util_Calendar_R_boolean
extern JAVA_LONG get_static_com_codename1_util_DateUtil_MILLISECOND();
extern JAVA_LONG get_static_com_codename1_util_DateUtil_SECOND();
extern JAVA_LONG get_static_com_codename1_util_DateUtil_MINUTE();
extern JAVA_LONG get_static_com_codename1_util_DateUtil_HOUR();
extern JAVA_LONG get_static_com_codename1_util_DateUtil_DAY();
extern JAVA_LONG get_static_com_codename1_util_DateUtil_MONTH();
extern JAVA_LONG get_static_com_codename1_util_DateUtil_YEAR();
JAVA_OBJECT get_field_com_codename1_util_DateUtil_tz(JAVA_OBJECT t);
void set_field_com_codename1_util_DateUtil_tz(CODENAME_ONE_THREAD_STATE, JAVA_OBJECT __cn1Val, JAVA_OBJECT __cn1T);


struct obj__com_codename1_util_DateUtil {
    DEBUG_GC_VARIABLES
    struct clazz *__codenameOneParentClsReference;
    int __codenameOneReferenceCount;
    void* __codenameOneThreadData;
    int __codenameOneGcMark;
    void* __ownerThread;
    int __heapPosition;
    JAVA_OBJECT com_codename1_util_DateUtil_tz;
};



#endif //__COM_CODENAME1_UTIL_DATEUTIL__
