#ifndef __COM_CODENAME1_PROCESSING_RESULTTOKENIZER__
#define __COM_CODENAME1_PROCESSING_RESULTTOKENIZER__

#include "cn1_globals.h"
#include "java_lang_Object.h"
extern struct clazz class__com_codename1_processing_ResultTokenizer;
extern void __INIT_VTABLE_com_codename1_processing_ResultTokenizer(CODENAME_ONE_THREAD_STATE, void** vtable);
extern void __STATIC_INITIALIZER_com_codename1_processing_ResultTokenizer(CODENAME_ONE_THREAD_STATE);
extern void __FINALIZER_com_codename1_processing_ResultTokenizer(CODENAME_ONE_THREAD_STATE, JAVA_OBJECT objToDelete);
extern void __GC_MARK_com_codename1_processing_ResultTokenizer(CODENAME_ONE_THREAD_STATE, JAVA_OBJECT objToMark, JAVA_BOOLEAN force);
extern JAVA_OBJECT __NEW_com_codename1_processing_ResultTokenizer(CODENAME_ONE_THREAD_STATE);

JAVA_VOID com_codename1_processing_ResultTokenizer___INIT_____java_lang_String(CODENAME_ONE_THREAD_STATE, JAVA_OBJECT  __cn1ThisObject, JAVA_OBJECT __cn1Arg1);

JAVA_OBJECT com_codename1_processing_ResultTokenizer_tokenize___java_util_Map_R_java_util_List(CODENAME_ONE_THREAD_STATE, JAVA_OBJECT  __cn1ThisObject, JAVA_OBJECT __cn1Arg1);

JAVA_OBJECT com_codename1_processing_ResultTokenizer_getPredicate___java_lang_StringBuffer_R_java_lang_String(CODENAME_ONE_THREAD_STATE, JAVA_OBJECT  __cn1ThisObject, JAVA_OBJECT __cn1Arg1);

JAVA_OBJECT com_codename1_processing_ResultTokenizer_next___R_java_lang_String(CODENAME_ONE_THREAD_STATE, JAVA_OBJECT  __cn1ThisObject);

JAVA_BOOLEAN com_codename1_processing_ResultTokenizer_isSubscript___char_R_boolean(CODENAME_ONE_THREAD_STATE, JAVA_CHAR __cn1Arg1);

JAVA_BOOLEAN com_codename1_processing_ResultTokenizer_isSeparator___char_R_boolean(CODENAME_ONE_THREAD_STATE, JAVA_CHAR __cn1Arg1);

JAVA_BOOLEAN com_codename1_processing_ResultTokenizer_isDelimiter___char_R_boolean(CODENAME_ONE_THREAD_STATE, JAVA_CHAR __cn1Arg1);

JAVA_VOID com_codename1_processing_ResultTokenizer___INIT____(CODENAME_ONE_THREAD_STATE, JAVA_OBJECT  __cn1ThisObject);

JAVA_BOOLEAN com_codename1_processing_ResultTokenizer_equals___java_lang_Object_R_boolean(CODENAME_ONE_THREAD_STATE, JAVA_OBJECT  __cn1ThisObject, JAVA_OBJECT __cn1Arg1);

JAVA_OBJECT com_codename1_processing_ResultTokenizer_getClass___R_java_lang_Class(CODENAME_ONE_THREAD_STATE, JAVA_OBJECT  __cn1ThisObject);

JAVA_INT com_codename1_processing_ResultTokenizer_hashCode___R_int(CODENAME_ONE_THREAD_STATE, JAVA_OBJECT  __cn1ThisObject);

JAVA_VOID com_codename1_processing_ResultTokenizer_notify__(CODENAME_ONE_THREAD_STATE, JAVA_OBJECT  __cn1ThisObject);

JAVA_VOID com_codename1_processing_ResultTokenizer_notifyAll__(CODENAME_ONE_THREAD_STATE, JAVA_OBJECT  __cn1ThisObject);

JAVA_OBJECT com_codename1_processing_ResultTokenizer_toString___R_java_lang_String(CODENAME_ONE_THREAD_STATE, JAVA_OBJECT  __cn1ThisObject);

JAVA_VOID com_codename1_processing_ResultTokenizer_wait__(CODENAME_ONE_THREAD_STATE, JAVA_OBJECT  __cn1ThisObject);

JAVA_VOID com_codename1_processing_ResultTokenizer_wait___long(CODENAME_ONE_THREAD_STATE, JAVA_OBJECT  __cn1ThisObject, JAVA_LONG __cn1Arg1);

JAVA_VOID com_codename1_processing_ResultTokenizer_wait___long_int(CODENAME_ONE_THREAD_STATE, JAVA_OBJECT  __cn1ThisObject, JAVA_LONG __cn1Arg1, JAVA_INT __cn1Arg2);

JAVA_OBJECT com_codename1_processing_ResultTokenizer_clone___R_java_lang_Object(CODENAME_ONE_THREAD_STATE, JAVA_OBJECT  __cn1ThisObject);
#define virtual_com_codename1_processing_ResultTokenizer_tokenize___java_util_Map_R_java_util_List com_codename1_processing_ResultTokenizer_tokenize___java_util_Map_R_java_util_List
JAVA_OBJECT get_field_com_codename1_processing_ResultTokenizer_expression(JAVA_OBJECT t);
void set_field_com_codename1_processing_ResultTokenizer_expression(CODENAME_ONE_THREAD_STATE, JAVA_OBJECT __cn1Val, JAVA_OBJECT __cn1T);
JAVA_INT get_field_com_codename1_processing_ResultTokenizer_length(JAVA_OBJECT t);
void set_field_com_codename1_processing_ResultTokenizer_length(CODENAME_ONE_THREAD_STATE, JAVA_INT __cn1Val, JAVA_OBJECT __cn1T);
JAVA_INT get_field_com_codename1_processing_ResultTokenizer_pos(JAVA_OBJECT t);
void set_field_com_codename1_processing_ResultTokenizer_pos(CODENAME_ONE_THREAD_STATE, JAVA_INT __cn1Val, JAVA_OBJECT __cn1T);
JAVA_BOOLEAN get_field_com_codename1_processing_ResultTokenizer_predicate(JAVA_OBJECT t);
void set_field_com_codename1_processing_ResultTokenizer_predicate(CODENAME_ONE_THREAD_STATE, JAVA_BOOLEAN __cn1Val, JAVA_OBJECT __cn1T);


struct obj__com_codename1_processing_ResultTokenizer {
    DEBUG_GC_VARIABLES
    struct clazz *__codenameOneParentClsReference;
    int __codenameOneReferenceCount;
    void* __codenameOneThreadData;
    int __codenameOneGcMark;
    void* __ownerThread;
    int __heapPosition;
    JAVA_OBJECT com_codename1_processing_ResultTokenizer_expression;
    JAVA_INT com_codename1_processing_ResultTokenizer_length;
    JAVA_INT com_codename1_processing_ResultTokenizer_pos;
    JAVA_BOOLEAN com_codename1_processing_ResultTokenizer_predicate;
};



#endif //__COM_CODENAME1_PROCESSING_RESULTTOKENIZER__
